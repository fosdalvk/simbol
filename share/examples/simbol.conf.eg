# vim: tw=0:ts=4:sw=4:et:ft=bash

USER_LOG_LEVEL=DEBUG

#. Change key values to 1 to enable the module
USER_MODULES=(
    [mymod]=0
)

#. Disable some special-case modules by default, users should enable them if
#. they have use for them:
CORE_MODULES[ng]=0
CORE_MODULES[ldap]=0
CORE_MODULES[mongo]=0
CORE_MODULES[softlayer]=0

#. Let's say our hosts have 2 interfaces in general:
#. Public, which we will call `p', and management which we will call `m':
#. First we also define which interface is on subnet:
USER_IFACE=(
    [_]=lo #. The period is a special tldid which matches all others
    [m]=eth0
    [p]=eth1
)
#. Next we define which ones are mandatory per host, arbitrary characters
USER_TLDIDS_REQUIRED=( m p )
#. When unspecified on the commandline, we will default to wildcard (`_')
USER_TLDID_DEFAULT=_
#. Now we declare the TLD for these subnets:
USER_TLDS=(
    [m]='mgmt.simbol'          #. Management network
    [p]='simbol.org'           #. Public network, add more as you please
)
#. Finally, for each TLD, we define the list of possible subdomain for any
#. given host:
declare -g -r -a USER_SUBDOMAIN_m=(
    unit-tests
    networks
    systems
)
declare -g -r -a USER_SUBDOMAIN_p=(
    api
    products
    support
)

#. LDAP -={
#USER_LDAPHOSTS=( localhost )
#USER_LDAPHOSTS_RW=( localhost )
#USER_LDAP_SYNC_ATTRS=( na )
#USER_UDN="ou=users,dc=comp,dc=org,dc=au"
#USER_GDN="ou=groups,dc=comp,dc=org,dc=au"
#USER_NDN="ou=netgroups,dc=comp,dc=org,dc=au"
#USER_HDN="ou=hosts,dc=comp,dc=org,dc=au"
#USER_SDN="ou=subnets,dc=comp,dc=org,dc=au"
#USER_REGEX="uid=.*"
#. }=-
#. remote:mon -={
#. These get executed remotely first...
USER_MON_CMDGRPREMOTE=(
    [sap2nfs]='IFS=- read -a host <<< "$(hostname -s)"; ls -ld /sapmnt/${host[1]^^}/.'
    [sap2afs]="df -Ph \$(awk '\$1~/^\//{print\$1}' /etc/autofs.d/auto.sap) | awk '\$1~/^nas/{printf(\",%s\",\$6)}'"
    [build]='stat --printf "[%y]" /var/log/anaconda.log 2>/dev/null'
    [cf]="test ! -f /.cfengine_disabled && { rpm -qi cfengine >/dev/null 2>&1 && echo 'ACTIVE' || echo 'UNINSTALLED'; } || { echo DISABLED:\$(head -n1 /.cfengine_disabled); exit 1; }"
    [cfran]="stat -c %Z /var/cfengine/ 2>/dev/null"
    [gw]="awk '\$1~/0.0.0.0/{print\$2}' <(netstat -rn)"
    [dc]="awk '\$1~/0.0.0.0/{print\$2}' <(netstat -rn)"
    [mem]="awk '\$1~/MemTotal/{print\$2}' /proc/meminfo"
    [sap2trans]="awk '\$1~/^.usr.sap.trans/{print\$3}' /etc/autofs.d/auto.sap"
    [cpu]="lscpu | awk -F ' *: *' '\$1~/^CPU\\(s\\)$/{cpus=\$2};\$1~/^Core\\(s\\) per socket$/{cps=\$2};\$1~/^CPU MHz$/{mhz=\$2};END{printf(\"%dx%dx%d\n\",cps,cpus/cps,mhz)}'"
    [os]="cat /etc/redhat-release"
    [sock]="/usr/sbin/lsof +c 0 -i TCP -s TCP:LISTEN"
    [scsi_rescan_disks]="/software/simbol/bin/scsi rescan_disks"
    [scsi_rescan_host]="/software/simbol/bin/scsi rescan_host"
    [ip]='/sbin/ip a show dev eth0 | awk "\$1~/^inet$/{print\$2}"'
    [uptime]="awk '{printf(\"%6.2f days\n\",\$1/3600/24)}' /proc/uptime"
    [dpkage]="stat --format='%Y'  /var/lib/dpkg/info"
)

#. These get executed locally using the output from the remote in place of %s...
USER_MON_CMDGRPLOCAL=(
    [dc]="subnetdb gw=%s dc env"
    [cfran]=':util:date_i2s %s'
    [dpkage]="expr ( ${NOW} - %s ) / 3600 / 24"
)
#. }=-
